[{"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\index.tsx":"1","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\App.tsx":"2","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\colors.js":"3","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\Icons\\Arrow.js":"4","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\Header.tsx":"5","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\SearchBar.tsx":"6","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\styled.ts":"7","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\styled.ts":"8","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\styled.ts":"9","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Button.tsx":"10","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Spinner.tsx":"11","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\services\\gitHubJobService.ts":"12","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\constants.js":"13","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\JobItem.tsx":"14","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\styled.ts":"15","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\JobsContainer.tsx":"16","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\styled.ts":"17","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\Home.tsx":"18","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\styled.ts":"19","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\store.ts":"20","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\reducer.ts":"21","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useGitHubJobService.ts":"22","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useActions.ts":"23","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\types.ts":"24","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\helpers\\timeDiffererence.ts":"25","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\Checkbox.tsx":"26","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\BackToTopButton.tsx":"27","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\styled.ts":"28","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobDetails\\JobDetails.tsx":"29","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobDetails\\styled.ts":"30","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useWindowHeight&Scroll.ts":"31"},{"size":335,"mtime":1610216410450,"results":"32","hashOfConfig":"33"},{"size":778,"mtime":1611001171124,"results":"34","hashOfConfig":"33"},{"size":1494,"mtime":1610720048461,"results":"35","hashOfConfig":"33"},{"size":1296,"mtime":1609151002156,"results":"36","hashOfConfig":"33"},{"size":1086,"mtime":1609236148463,"results":"37","hashOfConfig":"33"},{"size":2657,"mtime":1610991118486,"results":"38","hashOfConfig":"33"},{"size":4348,"mtime":1610399712097,"results":"39","hashOfConfig":"33"},{"size":1559,"mtime":1610564070670,"results":"40","hashOfConfig":"33"},{"size":3276,"mtime":1609237438313,"results":"41","hashOfConfig":"33"},{"size":471,"mtime":1610645773683,"results":"42","hashOfConfig":"33"},{"size":973,"mtime":1609237671917,"results":"43","hashOfConfig":"33"},{"size":1391,"mtime":1610996052658,"results":"44","hashOfConfig":"33"},{"size":151,"mtime":1610995629690,"results":"45","hashOfConfig":"33"},{"size":1171,"mtime":1610650417534,"results":"46","hashOfConfig":"33"},{"size":1982,"mtime":1610720225495,"results":"47","hashOfConfig":"33"},{"size":292,"mtime":1609689483216,"results":"48","hashOfConfig":"33"},{"size":579,"mtime":1609689704897,"results":"49","hashOfConfig":"33"},{"size":1386,"mtime":1611000397466,"results":"50","hashOfConfig":"33"},{"size":358,"mtime":1610470249589,"results":"51","hashOfConfig":"33"},{"size":134,"mtime":1610216410450,"results":"52","hashOfConfig":"33"},{"size":1619,"mtime":1611001248607,"results":"53","hashOfConfig":"33"},{"size":1452,"mtime":1611001171124,"results":"54","hashOfConfig":"33"},{"size":1449,"mtime":1610999067252,"results":"55","hashOfConfig":"33"},{"size":1568,"mtime":1610999067252,"results":"56","hashOfConfig":"33"},{"size":1445,"mtime":1610385783343,"results":"57","hashOfConfig":"33"},{"size":887,"mtime":1610991875787,"results":"58","hashOfConfig":"33"},{"size":1406,"mtime":1610571239995,"results":"59","hashOfConfig":"33"},{"size":750,"mtime":1610486849469,"results":"60","hashOfConfig":"33"},{"size":4320,"mtime":1610660448246,"results":"61","hashOfConfig":"33"},{"size":5363,"mtime":1610720175981,"results":"62","hashOfConfig":"33"},{"size":1089,"mtime":1610570853634,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1u6ci0c",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\index.tsx",[],["141","142"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\App.tsx",["143","144"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\colors.js",[],["145","146"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\Icons\\Arrow.js",["147","148"],"import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport colors from \"../constants/colors\";\r\n\r\nexport const SArrow = styled.div`\r\n    display: flex;            \r\n    height: 75%;\r\n  svg {      \r\n    height: 100%; \r\n    margin-left: 10px;\r\n  }  \r\n  \r\n`;\r\n\r\nexport default function Arrow(props) {\r\n\r\n  return (\r\n    <SArrow {...props} >\r\n      <svg viewBox=\"0 0 12 12\" className=\"icon\">\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M11.5303 5.46967C11.8232 5.76256 11.8232 6.23744 11.5303 6.53033L6.53033 11.5303C6.23744 11.8232 5.76256 11.8232 5.46967 11.5303C5.17678 11.2374 5.17678 10.7626 5.46967 10.4697L9.18934 6.75H1C0.585787 6.75 0.25 6.41421 0.25 6C0.25 5.58579 0.585787 5.25 1 5.25H9.18934L5.46967 1.53033C5.17678 1.23744 5.17678 0.762563 5.46967 0.46967C5.76256 0.176777 6.23744 0.176777 6.53033 0.46967L11.5303 5.46967Z\"\r\n        />\r\n      </svg>\r\n    </SArrow>\r\n  );\r\n}\r\n\r\n// ${props =>\r\n//   !props.isLoading &&\r\n//   css`\r\n//   & .icon {\r\n//     fill: transparent;\r\n//   }\r\n//   `}\r\n// ${props =>\r\n//   props.size === \"s\" &&\r\n//   css`\r\n//     height: 11px;\r\n//   `}\r\n\r\n//   ${props =>\r\n//     props.variant === \"ghost\" &&\r\n//     css`\r\n//       svg {\r\n//         fill: ${colors.black30};\r\n//       }\r\n//     `}","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\Header.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\SearchBar.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\styled.ts",["149"],"import styled, { css } from 'styled-components';\r\nimport colors from '../../constants/colors'\r\n\r\n\r\n\r\nconst StyledHeader = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  align-items: center;\r\n  min-height: 140px;\r\n\r\n  & .header__backgrounds {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 140px;\r\n    & img {\r\n      max-width: 100%;\r\n      width: 100%;\r\n      border-bottom-left-radius: 80px;\r\n    }\r\n  }\r\n  & .header__logo {\r\n    color: ${colors.white};\r\n    font-size: 30px;\r\n  }\r\n  & .header__inner {\r\n    display: flex;\r\n    position: absolute;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    padding: 0 9vw;\r\n    & .header__toggle {\r\n      display: flex;\r\n      align-items: center;\r\n      & button {\r\n        position: relative;\r\n        margin: 0 15px;\r\n        height: 20px;\r\n        width: 40px;\r\n        border: 0;\r\n        border-radius: 10px;\r\n        cursor: pointer;\r\n        & .slider {\r\n          position: absolute;\r\n          height: 14px;\r\n          width: 14px;\r\n          top: 3px;\r\n          left: 4px;\r\n          border: 0;\r\n          border-radius: 50%;\r\n          background-color: ${colors.second};\r\n          transition: 0.2s;\r\n        }\r\n        & .active .slider {\r\n          transform: translateX(calc(100% + 4px));\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 600px) {\r\n    min-height: 200px;\r\n    & .header__backgrounds {\r\n      min-height: 200px;\r\n      & img {\r\n        transform: translateX(-53px) scaleX(1.5);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledHeader;","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Button.tsx",["150"],"import React from 'react';\r\nimport Spinner from './Spinner';\r\nimport { StyledButton, StyledButtonProps } from './styled';\r\n\r\ninterface Button extends StyledButtonProps {\r\n  children: string;  \r\n}\r\n\r\nconst Button = ({ children, ...props }:Button) => {\r\n  return (\r\n    <StyledButton {...props}  >\r\n      <>\r\n        {children}\r\n        <Spinner {...props} />\r\n        {props.icon}\r\n      </>\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Spinner.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\services\\gitHubJobService.ts",["151"],"import { JobType, Jobs } from './../types';\r\nimport { baseUrl } from '../constants/constants';\r\nimport { GetJobs, GitHubJobServiceInterface } from './types';\r\n\r\nclass GitHubJobService implements GitHubJobServiceInterface<Jobs> {\r\n  baseUrl: string;\r\n  constructor(baseUrl: string) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n  getJobs: GetJobs<Jobs> = ({ description = '', location = '', fullTime = false, page }) => {\r\n    const descriptionUrl: string = description.trim() ? `description=${description.replace(/ /g, '+')}` : '';\r\n    const locationUrl: string = location.trim() ? `location=${location.replace(/ /g, '+')}` : '';\r\n    const fullTimeUrl: string = fullTime ? `full_time=on` : '';\r\n    const pageUrl: string = page ? `page=${page}` : '';\r\n    const additionalQuery: string = [descriptionUrl, locationUrl, fullTimeUrl, pageUrl].filter(Boolean).join('&');\r\n    localStorage.setItem('description', description);\r\n    localStorage.setItem('location', location);\r\n    if (fullTime) {\r\n      localStorage.setItem('fullTime', 'true');\r\n    } else {\r\n      localStorage.removeItem('fullTime');\r\n    }\r\n\r\n    return fetch(this.baseUrl + additionalQuery, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => (res.ok ? res.json() : Promise.reject(res)))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        throw err;\r\n      });\r\n  }\r\n}\r\n\r\nexport default new GitHubJobService(baseUrl);\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\constants.js",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\JobItem.tsx",["152"],"import React, { useState } from 'react';\r\nimport StyledJobItem from './styled';\r\nimport { JobItemPropTypes } from './types';\r\nexport default function JobItem({ logo, date, lengthTerm, company, jobTitle, location }: JobItemPropTypes) {\r\n  return (\r\n    <StyledJobItem {...{logo}}>\r\n      <div className='thumbnail__image__container'>\r\n        <div className='thumbnail__image__container_bg'></div>\r\n        <div className='thumbnail__image__container_box'>\r\n          {logo && <img src={logo} alt={`${company} company logo`} />}\r\n          {!logo && <div className='no-logo'>n / a</div>}\r\n        </div>\r\n      </div>\r\n      <p className='thumbnail__time-type'>\r\n        <span className='thumbnail__time'>{date}</span>\r\n        <span style={{ margin: '0 10px' }}>•</span>\r\n        <span className='thumbnail__type'>{lengthTerm}</span>\r\n      </p>\r\n      <h3 className='thumbnail__title'>{jobTitle}</h3>\r\n\r\n      <p className='thumbnail__company'>{company}</p>\r\n      <span className='thumbnail__location'>{location}</span>\r\n    </StyledJobItem>\r\n  );\r\n}\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\styled.ts",["153"],"import styled, { css } from 'styled-components';\r\nimport colors from '../../constants/colors';\r\n\r\nexport interface StyledJobItemProps {\r\n  logo: string;\r\n}\r\n\r\nconst StyledJobItem = styled.div<StyledJobItemProps>`\r\n  position: relative;\r\n  background-color: ${colors.white};\r\n  border-radius: 5px;\r\n  padding: 0 20px 20px;\r\n  height: 225px;\r\n  box-shadow: 0px 0px 13px 0px ${colors.boxShadow};\r\n  & .thumbnail__image__container_bg {\r\n    background: ${({logo}) => logo ? `url(${logo})` : colors.white};\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    filter: blur(40px);\r\n  }\r\n  & .thumbnail__image__container_box {\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    height: 100%;\r\n    z-index: 2;\r\n  }\r\n  & .thumbnail__image__container {\r\n    display: flex;\r\n    position: relative;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    height: 70px;\r\n    width: 70px;\r\n    padding: 8px;\r\n    border-radius: 10px;\r\n    transform: translateY(-50%);\r\n    border: 1px solid ${colors.grayLight};\r\n    background-color: ${colors.white};\r\n    & img {\r\n      max-width: 100%;      \r\n      object-fit: contain;\r\n    };\r\n    & .no-logo {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      color: ${colors.grayDark};\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 12px;\r\n    };\r\n  }\r\n  & .thumbnail__time-type, .thumbnail__company {\r\n    font-size: 0.85em;\r\n  };\r\n  & .thumbnail__title {\r\n    margin: 15px 0;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n  };\r\n  & .thumbnail__location {\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 20px;\r\n    color: ${colors.main};\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 1;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n`;\r\n\r\nexport default StyledJobItem;","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\JobsContainer.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\styled.ts",["154"],"import styled, { css } from 'styled-components';\r\n\r\nconst StyledJobsContainer = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 60px 15px;\r\n  margin: 70px auto 90px;\r\n  width: 100%;\r\n  & a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  @media (max-width: 950px) {    \r\n      grid-template-columns: repeat(2, 1fr);\r\n      grid-gap: 60px 10px;   \r\n  }\r\n  @media (max-width: 600px) {    \r\n      grid-template-columns: 1fr;\r\n      grid-gap: 70px 0;\r\n      margin: 60px auto 50px;\r\n   }\r\n`;\r\n\r\nexport default StyledJobsContainer;\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\Home.tsx",["155","156"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\styled.ts",["157"],"import styled, { css } from 'styled-components';\r\nimport colors from '../../constants/colors';\r\n\r\nconst StyledHome = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1900px;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  padding: 5vh 9vw;\r\n  margin: 0 auto;\r\n  & .back-to-top {\r\n    display: flex;\r\n    position: fixed;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: ${colors.white};\r\n    height: 60px;\r\n    width: 60px;\r\n    border-radius: 50%;\r\n    border: 2px solid var(--back-to-top);\r\n    bottom: 50px;\r\n    right: 9vw;\r\n    cursor: pointer;\r\n    & img {\r\n      height: 22px;\r\n      transition: 0.3s;\r\n      \r\n    }\r\n    &:hover img {\r\n      transform: translateY(4px);\r\n    }\r\n  }\r\n  `;\r\n\r\nexport default StyledHome;\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\store.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\reducer.ts",["158","159","160","161","162"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useGitHubJobService.ts",["163","164","165"],"import { Jobs, JobsActionTypes } from './../types';\r\nimport { RootState } from './../reducer';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport gitHubJobService from '../services/gitHubJobService';\r\nimport { useActions } from './useActions';\r\n\r\ntype ActionCreator = (payload: Jobs) => JobsActionTypes;\r\ntype HandleSearchJobs = (actionCreator: ActionCreator, isNewSearch?: boolean) => void;\r\n\r\nexport const useGitHubJobService = (a: void) => {\r\n  const { description, location, fullTime, page, jobs, isLoading } = useSelector((state: RootState) => state);\r\n  const {\r\n    jobsStartFetching,\r\n    jobsStopFetching,\r\n    jobsFill,\r\n    jobsFillMore,\r\n    inreasePage,\r\n    resetPage,\r\n  } = useActions();\r\n\r\n  const handleSearchJobs: HandleSearchJobs = (actionCreator, isNewSearch) => {\r\n    jobsStartFetching();\r\n    gitHubJobService\r\n      .getJobs({ description, location, fullTime, page: isNewSearch ? 1 : page })\r\n      .then((res) => {\r\n        if (res.length >= 50) inreasePage();\r\n        actionCreator(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => jobsStopFetching());\r\n  };\r\n\r\n  const searchJobs = () => {\r\n    resetPage();\r\n    handleSearchJobs(jobsFill, true);\r\n  };\r\n  const searchMoreJobs = () => handleSearchJobs(jobsFillMore);\r\n\r\n  return { description, location, fullTime, jobs, searchJobs, searchMoreJobs, isLoading };\r\n};\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useActions.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\types.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\helpers\\timeDiffererence.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\Checkbox.tsx",["166","167"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useActions } from '../../hooks/useActions';\r\nimport check from '../../images/desktop/icon-check.svg';\r\nimport { RootState } from '../../reducer';\r\nimport { StyledCheckbox, StyledCheckboxProps } from './styled';\r\n\r\ninterface CheckboxProps extends StyledCheckboxProps {\r\n  children?: string;\r\n}\r\n\r\nexport default function Checkbox({ checked, children }: CheckboxProps) {\r\n  const { toggleFulltime } = useActions();\r\n\r\n  useEffect(() => {\r\n    checked ? localStorage.setItem('fullTime', 'true') : localStorage.removeItem('fullTime');\r\n  }, [checked])\r\n\r\n  return (\r\n    <StyledCheckbox {...{ checked }}>\r\n      <span onClick={toggleFulltime}>\r\n        <img src={check} alt='Checkmark' />\r\n      </span>\r\n      <small onClick={toggleFulltime}>{children}</small>\r\n    </StyledCheckbox>\r\n  );\r\n}\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\BackToTopButton.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobDetails\\JobDetails.tsx",["168","169","170","171","172"],"import React from 'react';\r\nimport { timeDifference } from '../../helpers/timeDiffererence';\r\nimport { useGitHubJobService } from '../../hooks/useGitHubJobService';\r\nimport { JobType } from '../../types';\r\nimport BackToTopButton from '../BackToTopButton/BackToTopButton';\r\nimport Button from '../Button/Button';\r\nimport { StyledJobDetails } from './styled';\r\nimport { Props } from './types';\r\n\r\n// const isJobType = (job: JobType | undefined): job is JobType => {\r\n//   return (job as JobType).company_url !== void 0\r\n// }\r\n\r\nexport default function JobDetails({ match }: Props) {\r\n  const { jobs, isLoading } = useGitHubJobService();\r\n  const jobID: string = match.params.jobID;\r\n  const job: JobType | undefined = jobs.find(({ id }) => id === jobID);\r\n\r\n  const cleanURL = (url: string): string => {\r\n    return (url = url && url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/')[0]);\r\n  };\r\n\r\n  const validCompanySite = (url: string): boolean => {\r\n    let valid = new RegExp(\r\n      /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi\r\n    );\r\n    return valid.test(url);\r\n  };\r\n\r\n  const applyNowLink = (link: string): string | undefined => {\r\n    let valid = /(?:(?:https?|ftp|file):\\/\\/|www\\.|ftp\\.)(?:\\([-A-Z0-9+&@#\\/%=~_|$?!:,.]*\\)|[-A-Z0-9+&@#\\/%=~_|$?!:,.])*(?:\\([-A-Z0-9+&@#\\/%=~_|$?!:,.]*\\)|[A-Z0-9+&@#\\/%=~_|$])/gim;\r\n    return link.match(valid) ? link.match(valid)![0] : undefined;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {job && (\r\n        <StyledJobDetails>\r\n          <div className='job__listing__header'>\r\n            <div className='header__image__container'>\r\n              {job.company_logo && <img src={`${job.company_logo}`} alt={`company logo`} />}\r\n              {!job.company_logo && <div className='no-logo'>n / a</div>}\r\n            </div>\r\n            <div className='header__textbox'>\r\n              <div className='textbox__inner'>\r\n                <h1 className='header__textbox__heading'>{job.company}</h1>\r\n                <p className='header__textbox__site'>{cleanURL(job.company_url)}</p>\r\n              </div>\r\n              <div className={`header__textbox__company-redirect`}>\r\n                {validCompanySite(job.company_url) && (\r\n                  <Button onClick={() => window.open(job.company_url)}>Company site</Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='job__listing__body'>\r\n            <div className='body__heading'>\r\n              <div className='body__heading__inner'>\r\n                <p className='body__heading__time-type'>\r\n                  <span className='body__heading__time'>\r\n                    {timeDifference(Date.now(), Date.parse(job.created_at))}\r\n                  </span>\r\n                  <span style={{ margin: '0 10px' }}>•</span>\r\n                  <span className='body__heading__type'>{job.type}</span>\r\n                </p>\r\n                <h2 className='body__heading__title'>{job.title}</h2>\r\n                <p className='body__heading__location'>{job.location}</p>\r\n              </div>\r\n              {applyNowLink(job.how_to_apply) && (\r\n                <Button onClick={() => window.open(applyNowLink(job.how_to_apply))}>Apply&nbsp;Now</Button>\r\n              )}\r\n            </div>\r\n            <div className='body__main' dangerouslySetInnerHTML={{ __html: job.description }} />\r\n          </div>\r\n          <div className='job__listing__cta'>\r\n            <h3 className='cta__heading'>How to Apply</h3>\r\n            <br />\r\n            <p className='cta__body' dangerouslySetInnerHTML={{ __html: job.how_to_apply }} />\r\n          </div>\r\n          <footer className='job__listing__footer'>\r\n            <div className='footer__textbox'>\r\n              <h4 className='footer__textbox__position'>{job.title}</h4>\r\n              <small className='footer__textbox__company'>{job.company}</small>\r\n            </div>\r\n            {applyNowLink(job.how_to_apply) && (\r\n              <Button onClick={() => window.open(applyNowLink(job.how_to_apply))}>Apply Now</Button>\r\n            )}\r\n          </footer>\r\n          <BackToTopButton />\r\n        </StyledJobDetails>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobDetails\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useWindowHeight&Scroll.ts",["173"],"import React, { useEffect, useState } from 'react';\r\n\r\nexport default function useWindowHeightScroll() {\r\n  // const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n  // const [scroll, setScroll] = useState(window.pageYOffset);\r\n  const [isBackToTopButtonVisible, setIsBackToTopButtonVisible] = useState(false)\r\n  useEffect(() => {\r\n    function updateScrollHeight() {\r\n      // setWindowHeight(window.innerHeight);\r\n      // setScroll(window.pageYOffset);      \r\n      const scrollHeight = Math.max(\r\n        document.body.scrollHeight, document.documentElement.scrollHeight,\r\n        document.body.offsetHeight, document.documentElement.offsetHeight,\r\n        document.body.clientHeight, document.documentElement.clientHeight\r\n      );\r\n      setIsBackToTopButtonVisible(window.pageYOffset >= scrollHeight / 5)\r\n    }\r\n    window.addEventListener('scroll', updateScrollHeight);\r\n    updateScrollHeight();\r\n    return () => window.removeEventListener('scroll', updateScrollHeight);\r\n  }, []);\r\n  \r\n  return {\r\n    isBackToTopButtonVisible\r\n  }\r\n}\r\n",["174","175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":13,"column":6,"nodeType":"186","endLine":13,"endColumn":8,"suggestions":"187"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"188","severity":1,"message":"189","line":2,"column":18,"nodeType":"182","messageId":"183","endLine":2,"endColumn":21},{"ruleId":"188","severity":1,"message":"190","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":14},{"ruleId":"180","severity":1,"message":"189","line":1,"column":18,"nodeType":"182","messageId":"183","endLine":1,"endColumn":21},{"ruleId":"191","severity":1,"message":"192","line":9,"column":7,"nodeType":"182","messageId":"193","endLine":9,"endColumn":13},{"ruleId":"180","severity":1,"message":"194","line":1,"column":10,"nodeType":"182","messageId":"183","endLine":1,"endColumn":17},{"ruleId":"180","severity":1,"message":"195","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"189","line":1,"column":18,"nodeType":"182","messageId":"183","endLine":1,"endColumn":21},{"ruleId":"180","severity":1,"message":"189","line":1,"column":18,"nodeType":"182","messageId":"183","endLine":1,"endColumn":21},{"ruleId":"180","severity":1,"message":"196","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"195","line":1,"column":28,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"189","line":1,"column":18,"nodeType":"182","messageId":"183","endLine":1,"endColumn":21},{"ruleId":"180","severity":1,"message":"197","line":1,"column":10,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"198","line":4,"column":11,"nodeType":"182","messageId":"183","endLine":4,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":9,"column":11,"nodeType":"201","messageId":"202","endLine":9,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":9,"column":55,"nodeType":"201","messageId":"202","endLine":9,"endColumn":73},{"ruleId":"203","severity":1,"message":"204","line":21,"column":1,"nodeType":"205","endLine":46,"endColumn":3},{"ruleId":"180","severity":1,"message":"206","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":13},{"ruleId":"180","severity":1,"message":"196","line":3,"column":17,"nodeType":"182","messageId":"183","endLine":3,"endColumn":26},{"ruleId":"180","severity":1,"message":"207","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":21},{"ruleId":"180","severity":1,"message":"208","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":21},{"ruleId":"180","severity":1,"message":"209","line":5,"column":10,"nodeType":"182","messageId":"183","endLine":5,"endColumn":19},{"ruleId":"180","severity":1,"message":"210","line":15,"column":17,"nodeType":"182","messageId":"183","endLine":15,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":31,"column":75,"nodeType":"213","messageId":"214","endLine":31,"endColumn":76,"suggestions":"215"},{"ruleId":"211","severity":1,"message":"212","line":31,"column":105,"nodeType":"213","messageId":"214","endLine":31,"endColumn":106,"suggestions":"216"},{"ruleId":"211","severity":1,"message":"212","line":31,"column":138,"nodeType":"213","messageId":"214","endLine":31,"endColumn":139,"suggestions":"217"},{"ruleId":"211","severity":1,"message":"212","line":31,"column":167,"nodeType":"213","messageId":"214","endLine":31,"endColumn":168,"suggestions":"218"},{"ruleId":"180","severity":1,"message":"206","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":13},{"ruleId":"176","replacedBy":"219"},{"ruleId":"178","replacedBy":"220"},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"@typescript-eslint/no-unused-vars","'gitHubJobService' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchJobs'. Either include it or remove the dependency array.","ArrayExpression",["223"],"no-unused-vars","'css' is defined but never used.","'colors' is defined but never used.","@typescript-eslint/no-redeclare","'Button' is already defined.","redeclared","'JobType' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'JobsActionTypes' is defined but never used.","'Action' is defined but never used.","@typescript-eslint/consistent-type-assertions","Use 'as FieldInfo' instead of '<FieldInfo>'.","TSTypeAssertion","as","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'isLoading' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["224","225"],["226","227"],["228","229"],["230","231"],["221"],["222"],"no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"messageId":"234","fix":"235","desc":"236"},{"messageId":"237","fix":"238","desc":"239"},{"messageId":"234","fix":"240","desc":"236"},{"messageId":"237","fix":"241","desc":"239"},{"messageId":"234","fix":"242","desc":"236"},{"messageId":"237","fix":"243","desc":"239"},{"messageId":"234","fix":"244","desc":"236"},{"messageId":"237","fix":"245","desc":"239"},"Update the dependencies array to be: [searchJobs]",{"range":"246","text":"247"},"removeEscape",{"range":"248","text":"249"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"250","text":"251"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"252","text":"249"},{"range":"253","text":"251"},{"range":"254","text":"249"},{"range":"255","text":"251"},{"range":"256","text":"249"},{"range":"257","text":"251"},[499,501],"[searchJobs]",[1390,1391],"",[1390,1390],"\\",[1420,1421],[1420,1420],[1453,1454],[1453,1453],[1482,1483],[1482,1482]]