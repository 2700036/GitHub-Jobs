[{"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\index.tsx":"1","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\App.tsx":"2","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\colors.js":"3","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\Icons\\Arrow.js":"4","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\Header.tsx":"5","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\SearchBar.tsx":"6","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\styled.ts":"7","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\styled.ts":"8","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\styled.ts":"9","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Button.tsx":"10","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Spinner.tsx":"11","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\services\\gitHubJobService.ts":"12","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\constants.js":"13","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\JobItem.tsx":"14","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\styled.ts":"15","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\JobsContainer.tsx":"16","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\styled.ts":"17","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\Home.tsx":"18","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\styled.ts":"19","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\store.ts":"20","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\reducer.ts":"21","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useGitHubJobService.ts":"22","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useActions.ts":"23","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\types.ts":"24","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\helpers\\timeDiffererence.ts":"25","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\Checkbox.tsx":"26","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\BackToTopButton.tsx":"27","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\styled.ts":"28","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobDetails\\JobDetails.tsx":"29","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobDetails\\styled.ts":"30","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useWindowHeight&Scroll.ts":"31"},{"size":335,"mtime":1610216410450,"results":"32","hashOfConfig":"33"},{"size":777,"mtime":1610653483662,"results":"34","hashOfConfig":"33"},{"size":1436,"mtime":1610196562297,"results":"35","hashOfConfig":"33"},{"size":1296,"mtime":1609151002156,"results":"36","hashOfConfig":"33"},{"size":1086,"mtime":1609236148463,"results":"37","hashOfConfig":"33"},{"size":2523,"mtime":1610399828079,"results":"38","hashOfConfig":"33"},{"size":4348,"mtime":1610399712097,"results":"39","hashOfConfig":"33"},{"size":1559,"mtime":1610564070670,"results":"40","hashOfConfig":"33"},{"size":3276,"mtime":1609237438313,"results":"41","hashOfConfig":"33"},{"size":471,"mtime":1610645773683,"results":"42","hashOfConfig":"33"},{"size":973,"mtime":1609237671917,"results":"43","hashOfConfig":"33"},{"size":1286,"mtime":1610387795150,"results":"44","hashOfConfig":"33"},{"size":100,"mtime":1610220762238,"results":"45","hashOfConfig":"33"},{"size":1171,"mtime":1610650417534,"results":"46","hashOfConfig":"33"},{"size":1929,"mtime":1610465306222,"results":"47","hashOfConfig":"33"},{"size":292,"mtime":1609689483216,"results":"48","hashOfConfig":"33"},{"size":579,"mtime":1609689704897,"results":"49","hashOfConfig":"33"},{"size":1260,"mtime":1610571239993,"results":"50","hashOfConfig":"33"},{"size":358,"mtime":1610470249589,"results":"51","hashOfConfig":"33"},{"size":134,"mtime":1610216410450,"results":"52","hashOfConfig":"33"},{"size":1181,"mtime":1610468648878,"results":"53","hashOfConfig":"33"},{"size":1142,"mtime":1610653483662,"results":"54","hashOfConfig":"33"},{"size":1013,"mtime":1610400287651,"results":"55","hashOfConfig":"33"},{"size":1198,"mtime":1610652945083,"results":"56","hashOfConfig":"33"},{"size":1445,"mtime":1610385783343,"results":"57","hashOfConfig":"33"},{"size":647,"mtime":1610468527564,"results":"58","hashOfConfig":"33"},{"size":1406,"mtime":1610571239995,"results":"59","hashOfConfig":"33"},{"size":750,"mtime":1610486849469,"results":"60","hashOfConfig":"33"},{"size":8968,"mtime":1610652945082,"results":"61","hashOfConfig":"33"},{"size":5195,"mtime":1610650155596,"results":"62","hashOfConfig":"33"},{"size":1089,"mtime":1610570853634,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1u6ci0c",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\index.tsx",[],["143","144"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\App.tsx",["145","146"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\colors.js",[],["147","148"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\Icons\\Arrow.js",["149","150"],"import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport colors from \"../constants/colors\";\r\n\r\nexport const SArrow = styled.div`\r\n    display: flex;            \r\n    height: 75%;\r\n  svg {      \r\n    height: 100%; \r\n    margin-left: 10px;\r\n  }  \r\n  \r\n`;\r\n\r\nexport default function Arrow(props) {\r\n\r\n  return (\r\n    <SArrow {...props} >\r\n      <svg viewBox=\"0 0 12 12\" className=\"icon\">\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M11.5303 5.46967C11.8232 5.76256 11.8232 6.23744 11.5303 6.53033L6.53033 11.5303C6.23744 11.8232 5.76256 11.8232 5.46967 11.5303C5.17678 11.2374 5.17678 10.7626 5.46967 10.4697L9.18934 6.75H1C0.585787 6.75 0.25 6.41421 0.25 6C0.25 5.58579 0.585787 5.25 1 5.25H9.18934L5.46967 1.53033C5.17678 1.23744 5.17678 0.762563 5.46967 0.46967C5.76256 0.176777 6.23744 0.176777 6.53033 0.46967L11.5303 5.46967Z\"\r\n        />\r\n      </svg>\r\n    </SArrow>\r\n  );\r\n}\r\n\r\n// ${props =>\r\n//   !props.isLoading &&\r\n//   css`\r\n//   & .icon {\r\n//     fill: transparent;\r\n//   }\r\n//   `}\r\n// ${props =>\r\n//   props.size === \"s\" &&\r\n//   css`\r\n//     height: 11px;\r\n//   `}\r\n\r\n//   ${props =>\r\n//     props.variant === \"ghost\" &&\r\n//     css`\r\n//       svg {\r\n//         fill: ${colors.black30};\r\n//       }\r\n//     `}","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\Header.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\SearchBar.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\styled.ts",["151"],"import styled, { css } from 'styled-components';\r\nimport colors from '../../constants/colors'\r\n\r\n\r\n\r\nconst StyledHeader = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  align-items: center;\r\n  min-height: 140px;\r\n\r\n  & .header__backgrounds {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 140px;\r\n    & img {\r\n      max-width: 100%;\r\n      width: 100%;\r\n      border-bottom-left-radius: 80px;\r\n    }\r\n  }\r\n  & .header__logo {\r\n    color: ${colors.white};\r\n    font-size: 30px;\r\n  }\r\n  & .header__inner {\r\n    display: flex;\r\n    position: absolute;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    padding: 0 9vw;\r\n    & .header__toggle {\r\n      display: flex;\r\n      align-items: center;\r\n      & button {\r\n        position: relative;\r\n        margin: 0 15px;\r\n        height: 20px;\r\n        width: 40px;\r\n        border: 0;\r\n        border-radius: 10px;\r\n        cursor: pointer;\r\n        & .slider {\r\n          position: absolute;\r\n          height: 14px;\r\n          width: 14px;\r\n          top: 3px;\r\n          left: 4px;\r\n          border: 0;\r\n          border-radius: 50%;\r\n          background-color: ${colors.second};\r\n          transition: 0.2s;\r\n        }\r\n        & .active .slider {\r\n          transform: translateX(calc(100% + 4px));\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 600px) {\r\n    min-height: 200px;\r\n    & .header__backgrounds {\r\n      min-height: 200px;\r\n      & img {\r\n        transform: translateX(-53px) scaleX(1.5);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledHeader;","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Button.tsx",["152"],"import React from 'react';\r\nimport Spinner from './Spinner';\r\nimport { StyledButton, StyledButtonProps } from './styled';\r\n\r\ninterface Button extends StyledButtonProps {\r\n  children: string;  \r\n}\r\n\r\nconst Button = ({ children, ...props }:Button) => {\r\n  return (\r\n    <StyledButton {...props}  >\r\n      <>\r\n        {children}\r\n        <Spinner {...props} />\r\n        {props.icon}\r\n      </>\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Spinner.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\services\\gitHubJobService.ts",["153","154"],"import { JobType, Jobs } from './../types';\r\nimport { baseUrl } from '../constants/constants';\r\nimport { GitHubJobServiceInterface } from './types';\r\n\r\nclass GitHubJobService implements GitHubJobServiceInterface<Jobs> {\r\n  baseUrl: string;\r\n  constructor(baseUrl: string) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n  getJobs({ description = '', location = '', fullTime = false}) {\r\n    const descriptionUrl: string = description.trim() ? `description=${description.replace(/ /g, '+')}` : '';\r\n    const locationUrl: string = location.trim() ? `location=${location.replace(/ /g, '+')}` : '';\r\n    const fullTimeUrl: string = fullTime ? `full_time=on` : '';\r\n    const additionalQuery: string = [descriptionUrl, locationUrl, fullTimeUrl].filter(Boolean).join('&');\r\n    localStorage.setItem('description', description);\r\n    localStorage.setItem('location', location);\r\n    if(fullTime){\r\n      localStorage.setItem('fullTime', 'true');\r\n    } else {\r\n      localStorage.removeItem('fullTime')\r\n    };\r\n\r\n    return fetch(this.baseUrl + additionalQuery, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => (res.ok ? res.json() : Promise.reject(res)))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        throw err;\r\n      });\r\n  }\r\n}\r\n\r\nexport default new GitHubJobService(baseUrl);\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\constants.js",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\JobItem.tsx",["155"],"import React, { useState } from 'react';\r\nimport StyledJobItem from './styled';\r\nimport { JobItemPropTypes } from './types';\r\nexport default function JobItem({ logo, date, lengthTerm, company, jobTitle, location }: JobItemPropTypes) {\r\n  return (\r\n    <StyledJobItem {...{logo}}>\r\n      <div className='thumbnail__image__container'>\r\n        <div className='thumbnail__image__container_bg'></div>\r\n        <div className='thumbnail__image__container_box'>\r\n          {logo && <img src={logo} alt={`${company} company logo`} />}\r\n          {!logo && <div className='no-logo'>n / a</div>}\r\n        </div>\r\n      </div>\r\n      <p className='thumbnail__time-type'>\r\n        <span className='thumbnail__time'>{date}</span>\r\n        <span style={{ margin: '0 10px' }}>•</span>\r\n        <span className='thumbnail__type'>{lengthTerm}</span>\r\n      </p>\r\n      <h3 className='thumbnail__title'>{jobTitle}</h3>\r\n\r\n      <p className='thumbnail__company'>{company}</p>\r\n      <span className='thumbnail__location'>{location}</span>\r\n    </StyledJobItem>\r\n  );\r\n}\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\styled.ts",["156"],"import styled, { css } from 'styled-components';\r\nimport colors from '../../constants/colors';\r\n\r\nexport interface StyledJobItemProps {\r\n  logo: string;\r\n}\r\n\r\nconst StyledJobItem = styled.div<StyledJobItemProps>`\r\n  position: relative;\r\n  background-color: ${colors.white};\r\n  border-radius: 5px;\r\n  padding: 0 20px 20px;\r\n  height: 225px;\r\n  & .thumbnail__image__container_bg {\r\n    background: ${({logo}) => logo ? `url(${logo})` : colors.white};\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    filter: blur(40px);\r\n  }\r\n  & .thumbnail__image__container_box {\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    height: 100%;\r\n    z-index: 2;\r\n  }\r\n  & .thumbnail__image__container {\r\n    display: flex;\r\n    position: relative;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    height: 70px;\r\n    width: 70px;\r\n    padding: 8px;\r\n    border-radius: 10px;\r\n    transform: translateY(-50%);\r\n    border: 1px solid ${colors.grayLight};\r\n    background-color: ${colors.white};\r\n    & img {\r\n      max-width: 100%;      \r\n      object-fit: contain;\r\n    };\r\n    & .no-logo {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      color: ${colors.grayDark};\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 12px;\r\n    };\r\n  }\r\n  & .thumbnail__time-type, .thumbnail__company {\r\n    font-size: 0.85em;\r\n  };\r\n  & .thumbnail__title {\r\n    margin: 15px 0;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n  };\r\n  & .thumbnail__location {\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 20px;\r\n    color: ${colors.main};\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 1;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n`;\r\n\r\nexport default StyledJobItem;","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\JobsContainer.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\styled.ts",["157"],"import styled, { css } from 'styled-components';\r\n\r\nconst StyledJobsContainer = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 60px 15px;\r\n  margin: 70px auto 90px;\r\n  width: 100%;\r\n  & a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  @media (max-width: 950px) {    \r\n      grid-template-columns: repeat(2, 1fr);\r\n      grid-gap: 60px 10px;   \r\n  }\r\n  @media (max-width: 600px) {    \r\n      grid-template-columns: 1fr;\r\n      grid-gap: 70px 0;\r\n      margin: 60px auto 50px;\r\n   }\r\n`;\r\n\r\nexport default StyledJobsContainer;\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\Home.tsx",["158","159"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '../../components/Button/Button';\r\nimport JobItem from '../../components/JobItem/JobItem';\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\nimport { timeDifference } from '../../helpers/timeDiffererence';\r\nimport { JobType } from '../../types';\r\nimport JobsContainer from '../../components/JobsContainer/JobsContainer';\r\nimport StyledHome from './styled';\r\nimport { useGitHubJobService } from '../../hooks/useGitHubJobService';\r\nimport BackToTopButton from '../../components/BackToTopButton/BackToTopButton';\r\n\r\n\r\nexport default function Home() {  \r\n  const { jobs } = useGitHubJobService();  \r\n  return (\r\n    <StyledHome>\r\n      <SearchBar />\r\n      <JobsContainer>\r\n        {jobs?.map((job: JobType) => (\r\n          <JobItem\r\n            key={job.id}\r\n            id={job.id}\r\n            logo={job.company_logo}\r\n            date={timeDifference(Date.now(), Date.parse(job.created_at))}\r\n            lengthTerm={job.type}\r\n            company={job.company}\r\n            jobTitle={job.title}\r\n            location={job.location}\r\n          />\r\n        ))}\r\n      </JobsContainer>\r\n      <Button>Load More</Button>\r\n      <BackToTopButton />\r\n    </StyledHome>\r\n  );\r\n}\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\styled.ts",["160"],"import styled, { css } from 'styled-components';\r\nimport colors from '../../constants/colors';\r\n\r\nconst StyledHome = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1900px;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  padding: 5vh 9vw;\r\n  margin: 0 auto;\r\n  & .back-to-top {\r\n    display: flex;\r\n    position: fixed;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: ${colors.white};\r\n    height: 60px;\r\n    width: 60px;\r\n    border-radius: 50%;\r\n    border: 2px solid var(--back-to-top);\r\n    bottom: 50px;\r\n    right: 9vw;\r\n    cursor: pointer;\r\n    & img {\r\n      height: 22px;\r\n      transition: 0.3s;\r\n      \r\n    }\r\n    &:hover img {\r\n      transform: translateY(4px);\r\n    }\r\n  }\r\n  `;\r\n\r\nexport default StyledHome;\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\store.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\reducer.ts",["161","162","163","164","165"],"import { JobsActionTypes, FieldInfo, Jobs } from './types';\r\n\r\n\r\ninterface Action {\r\n  type: string;\r\n  payload: Jobs | FieldInfo;\r\n}\r\nconst isFieldInfo = (payload: any): payload is FieldInfo => {\r\n  return (<FieldInfo>payload).field !== undefined && (<FieldInfo>payload).value !== undefined;\r\n};\r\n\r\nconst initialState = {\r\n  description: '',\r\n  location: '',\r\n  fullTime: false,\r\n  jobs: [],\r\n  isLoading: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }: any) => {\r\n  switch (type) {\r\n    case 'JOBS_START_FETCHING':\r\n      return { ...state, isLoading: true };\r\n    case 'JOBS_STOP_FETCHING':\r\n      return { ...state, isLoading: false };\r\n    case 'JOBS_FILL':\r\n      return { ...state, jobs: payload };\r\n    case 'FULLTIME_SWITCH':      \r\n      return { ...state, fullTime: !state.fullTime };\r\n    case 'UPDATE_SEARCH_VALUE':\r\n      if (!isFieldInfo(payload)) return state;\r\n      const field: string = payload.field;\r\n      return { ...state, [field]: payload.value };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport type RootState = {\r\n  description: string;\r\n  location: string;\r\n  fullTime: boolean;\r\n  jobs: Jobs;\r\n  isLoading: boolean;\r\n};\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useGitHubJobService.ts",["166","167","168","169","170","171","172"],"import { Jobs } from './../types';\r\nimport { RootState } from './../reducer';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport gitHubJobService from '../services/gitHubJobService';\r\nimport { useActions } from './useActions';\r\n\r\nexport const useGitHubJobService = () => {\r\n  const { description, location, fullTime, jobs, isLoading } = useSelector((state: RootState) => state);\r\n  const { jobsStartFetching, jobsStopFetching, jobsFill } = useActions();\r\n  \r\n  const searchJobs = ():void => {\r\n    jobsStartFetching();\r\n    console.log(123)\r\n    gitHubJobService\r\n      .getJobs({ description, location, fullTime })\r\n      .then((res) => {        \r\n        jobsFill(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => jobsStopFetching());\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const savedDescription = localStorage.getItem('description');\r\n    const savedLocation = localStorage.getItem('location');\r\n    const savedFullTime: boolean = !!localStorage.getItem('fullTime');\r\n    \r\n  }, []);\r\n\r\n  return { description, location, fullTime, jobs, searchJobs, isLoading };\r\n};\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useActions.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\types.ts",["173"],"import { type } from 'os';\r\n\r\nexport type JobType = {\r\n  id: string;\r\n  company_logo: string;\r\n  created_at: string;\r\n  type: string;\r\n  company: string;\r\n  title: string;\r\n  location: string;\r\n};\r\n\r\nexport type Jobs = JobType[];\r\n\r\nexport const JOBS_START_FETCHING = 'JOBS_START_FETCHING';\r\ntype JobsStartFetchingAction = {\r\n  type: typeof JOBS_START_FETCHING;\r\n};\r\n\r\nexport const JOBS_STOP_FETCHING = 'JOBS_STOP_FETCHING';\r\ntype JobsStopFetchingAction = {\r\n  type: typeof JOBS_STOP_FETCHING;\r\n};\r\n\r\nexport const JOBS_FILL = 'JOBS_FILL';\r\ntype JobsFillAction = {\r\n  type: typeof JOBS_FILL;\r\n  payload: Array<JobType>;\r\n};\r\nexport const FULLTIME_SWITCH = 'FULLTIME_SWITCH';\r\ntype fulltimeSwitchAction = {\r\n  type: typeof FULLTIME_SWITCH;\r\n};\r\nexport type FieldInfo = { field: string; value: string };\r\nexport const UPDATE_SEARCH_VALUE = 'UPDATE_SEARCH_VALUE';\r\ntype UpdateSearchValueAction = {\r\n  type: typeof UPDATE_SEARCH_VALUE;\r\n  payload: FieldInfo;\r\n};\r\n\r\nexport type JobsActionTypes =\r\n  | JobsStartFetchingAction\r\n  | JobsStopFetchingAction\r\n  | JobsFillAction\r\n  | UpdateSearchValueAction\r\n  | fulltimeSwitchAction;\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\helpers\\timeDiffererence.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\Checkbox.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\BackToTopButton.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobDetails\\JobDetails.tsx",["174","175","176","177","178","179"],"import React from 'react';\r\nimport { timeDifference } from '../../helpers/timeDiffererence';\r\nimport { useGitHubJobService } from '../../hooks/useGitHubJobService';\r\nimport { JobType } from '../../types';\r\nimport BackToTopButton from '../BackToTopButton/BackToTopButton';\r\nimport Button from '../Button/Button';\r\nimport { StyledJobDetails } from './styled';\r\nimport { Props } from './types';\r\n\r\nconst job = {\r\n  company: 'Excelerate America',\r\n  company_logo:\r\n    'https://jobs.github.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBazJWIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e26dcd3bdc87a8d444428f600e5e4722b40e9cef/LogoEaStacked-20.jpg',\r\n  company_url: 'https://www.excelerateamerica.com/',\r\n  created_at: 'Wed Jan 13 15:59:23 UTC 2021',\r\n  description:\r\n    \"<h2>Company Overview:</h2>↵<p>Excelerate America (EA) is a network for small business entrepreneurs to transform their businesses from small to mighty. Collaborating with a diverse set of partners and communities, EA brings together a community wanting to help each other thrive; through inspiration, problem-solving, and access to curated products and services. The next phase of EA’s growth is to develop a dynamic and engaging mobile community platform driven by peer-to-peer problem-solving. This platform will help EA scale and connect its existing communities to power-up entrepreneurs' abilities to work together, get guidance from peers, and have a greater impact in their local communities.</p>↵<h2>Job Overview:</h2>↵<p>The Backend engineer works as a leading member of EA’s growing software and product technology team to help architect, develop, and launch EA’s platform.</p>↵<p>As a critical member of the product team, the Backend Engineer will work closely with the founding leadership and product development team to architect EA’s data structure, learning algorithms, and front-end integrations to build a platform that delivers a personalized and cutting edge experience to our users and partners. You will be one of the founding software engineers working closely with our Engineering Lead to design our new platform, help to scale it, and establish the way we work as a software-oriented organization. We are a company focused on our users and instill a human-centered approach, thus giving you the opportunity to go beyond development and participate in the design and creative thinking needed to build an exceptional end to end platform for our members.</p>↵<p>Excelerate America is a Detroit-based organization. We believe in a flexible work environment with 3 days in-office, 2 days remote approach to allow for cross-disciplinary collaboration. The Back End Engineer role is preferred to be co-located in Detroit with the product team. Remote will be considered.</p>↵<h2>Responsibilities and Duties:</h2>↵<ul>↵<li>Work with EA Dev team to develop EA APIs and EA Server-side Apps and documentation</li>↵<li>Document and test all EA APIs and EA Server-Side Apps and help build a culture of testing throughout our build process</li>↵<li>Setup, configure and monitor the various EA servers, hosting, and databases including dev, staging, production for both EA marketing sites and EA platform</li>↵<li>Setup, maintain, test, and create authentication, payment, and other gateways</li>↵<li>Setup repos in Git and workflows for continuous integration</li>↵<li>Troubleshoot server issues and performance bottlenecks</li>↵<li>Capable of scaling applications to handle the load changes.</li>↵<li>Design, implement, maintain and automate the appropriate backup and recovery architecture as required</li>↵</ul>↵<h2>Qualifications:</h2>↵<ul>↵<li>Bachelors of Computer Science or equivalent learning/experience</li>↵<li>5+ years of experience in engineering including experience building, launching and scaling a consumer or enterprise product or platform</li>↵<li>Deep understanding of NodeJs programming language and framework, including the development and optimization of server-less functions</li>↵<li>Deep understanding of databases NoSQL, MySQL as well as experience with and/or familiarity with GraphQL</li>↵<li>Proven experience working with multiple disciplines including business, front-end, and design and enjoy a highly collaborative environment</li>↵<li>Experience with agile development and/or sprint-based development</li>↵<li>Ability to set up development and production environments or the engineering teams including virtualization and container technology, GIT, and continuous integration workflows..</li>↵<li>Knowledge of security, privacy, and compliance as it applies to online users and payment gateways</li>↵<li>Basic knowledge of front-end technologies, such as HTML, CSS, and JavaScript, so that you can work closely with EA’s front-end development and design team</li>↵<li>Basic Knowledge of Machine Learning</li>↵</ul>↵\",\r\n  how_to_apply:\r\n    \"<p><a href='https://www.linkedin.com/jobs/view/2334165591'>https://www.linkedin.com/jobs/view/2334165591</a></p>↵\",\r\n  id: 'e55930c6-0db3-4fad-ab97-094b074a3648',\r\n  location: 'Detroit, MI',\r\n  title: 'Back End Developer',\r\n  type: 'Full Time',\r\n  url: 'https://jobs.github.com/positions/e55930c6-0db3-4fad-ab97-094b074a3648',\r\n};\r\n\r\n// const isJobType = (job: JobType | undefined): job is JobType => {\r\n//   return (job as JobType).company_url !== void 0\r\n// }\r\n\r\nexport default function JobDetails({ match }: Props) {\r\n  const { jobs, isLoading } = useGitHubJobService();\r\n  const jobID: string = match.params.jobID;\r\n  const job: JobType | undefined = jobs.find(({ id }) => id === jobID);\r\n\r\n  const cleanURL = (url: string): string => {\r\n    return (url = url && url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/')[0]);\r\n  };\r\n\r\n  const validCompanySite = (url: string): boolean => {\r\n    let valid = new RegExp(\r\n      /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi\r\n    );\r\n    return valid.test(url);\r\n  };\r\n\r\n  const applyNowLink = (link: string): string | undefined => {\r\n    let valid = /(?:(?:https?|ftp|file):\\/\\/|www\\.|ftp\\.)(?:\\([-A-Z0-9+&@#\\/%=~_|$?!:,.]*\\)|[-A-Z0-9+&@#\\/%=~_|$?!:,.])*(?:\\([-A-Z0-9+&@#\\/%=~_|$?!:,.]*\\)|[A-Z0-9+&@#\\/%=~_|$])/gim;\r\n    return link.match(valid) ? link.match(valid)![0] : undefined;\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {job && <StyledJobDetails>\r\n      <div className='job__listing__header'>\r\n        <div className='header__image__container'>\r\n          {job.company_logo && <img src={`${job.company_logo}`} alt={`company logo`} />}\r\n          {!job.company_logo && <div className='no-logo'>n / a</div>}\r\n        </div>\r\n        <div className='header__textbox'>\r\n          <div className='textbox__inner'>\r\n            <h1 className='header__textbox__heading'>{job.company}</h1>\r\n            <p className='header__textbox__site'>{cleanURL(job.company_url)}</p>\r\n          </div>\r\n          <div className={`header__textbox__company-redirect`}>\r\n            {validCompanySite(job.company_url) && (\r\n              <Button onClick={() => window.open(job.company_url)}>Company site</Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='job__listing__body'>\r\n        <div className='body__heading'>\r\n          <div className='body__heading__inner'>\r\n            <p className='body__heading__time-type'>\r\n              <span className='body__heading__time'>\r\n                {timeDifference(Date.now(), Date.parse(job.created_at))}\r\n              </span>\r\n              <span style={{ margin: '0 10px' }}>•</span>\r\n              <span className='body__heading__type'>{job.type}</span>\r\n            </p>\r\n            <h2 className='body__heading__title'>{job.title}</h2>\r\n            <p className='body__heading__location'>{job.location}</p>\r\n          </div>\r\n          {applyNowLink(job.how_to_apply) && (\r\n            <Button onClick={() => window.open(applyNowLink(job.how_to_apply))}>Apply Now</Button>\r\n          )}\r\n        </div>\r\n        <div className='body__main' dangerouslySetInnerHTML={{ __html: job.description }} />\r\n      </div>\r\n      <div className='job__listing__cta'>\r\n        <h3 className='cta__heading'>How to Apply</h3>\r\n        <br />\r\n        <p className='cta__body' dangerouslySetInnerHTML={{ __html: job.how_to_apply }} />\r\n      </div>\r\n      <footer className='job__listing__footer'>\r\n        <div className='footer__textbox'>\r\n          <h4 className='footer__textbox__position'>{job.title}</h4>\r\n          <small className='footer__textbox__company'>{job.company}</small>\r\n        </div>\r\n        {applyNowLink(job.how_to_apply) && (\r\n          <Button onClick={() => window.open(applyNowLink(job.how_to_apply))}>Apply Now</Button>\r\n        )}\r\n      </footer>\r\n      <BackToTopButton />\r\n    </StyledJobDetails>}\r\n    </>\r\n  );\r\n}\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobDetails\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useWindowHeight&Scroll.ts",["180"],"import React, { useEffect, useState } from 'react';\r\n\r\nexport default function useWindowHeightScroll() {\r\n  // const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n  // const [scroll, setScroll] = useState(window.pageYOffset);\r\n  const [isBackToTopButtonVisible, setIsBackToTopButtonVisible] = useState(false)\r\n  useEffect(() => {\r\n    function updateScrollHeight() {\r\n      // setWindowHeight(window.innerHeight);\r\n      // setScroll(window.pageYOffset);      \r\n      const scrollHeight = Math.max(\r\n        document.body.scrollHeight, document.documentElement.scrollHeight,\r\n        document.body.offsetHeight, document.documentElement.offsetHeight,\r\n        document.body.clientHeight, document.documentElement.clientHeight\r\n      );\r\n      setIsBackToTopButtonVisible(window.pageYOffset >= scrollHeight / 5)\r\n    }\r\n    window.addEventListener('scroll', updateScrollHeight);\r\n    updateScrollHeight();\r\n    return () => window.removeEventListener('scroll', updateScrollHeight);\r\n  }, []);\r\n  \r\n  return {\r\n    isBackToTopButtonVisible\r\n  }\r\n}\r\n",["181","182"],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":12,"column":6,"nodeType":"193","endLine":12,"endColumn":8,"suggestions":"194"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"195","severity":1,"message":"196","line":2,"column":18,"nodeType":"189","messageId":"190","endLine":2,"endColumn":21},{"ruleId":"195","severity":1,"message":"197","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"196","line":1,"column":18,"nodeType":"189","messageId":"190","endLine":1,"endColumn":21},{"ruleId":"198","severity":1,"message":"199","line":9,"column":7,"nodeType":"189","messageId":"200","endLine":9,"endColumn":13},{"ruleId":"187","severity":1,"message":"201","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":17},{"ruleId":"187","severity":1,"message":"202","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":22},{"ruleId":"187","severity":1,"message":"203","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"196","line":1,"column":18,"nodeType":"189","messageId":"190","endLine":1,"endColumn":21},{"ruleId":"187","severity":1,"message":"196","line":1,"column":18,"nodeType":"189","messageId":"190","endLine":1,"endColumn":21},{"ruleId":"187","severity":1,"message":"204","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"203","line":1,"column":28,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"196","line":1,"column":18,"nodeType":"189","messageId":"190","endLine":1,"endColumn":21},{"ruleId":"187","severity":1,"message":"205","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"206","line":4,"column":11,"nodeType":"189","messageId":"190","endLine":4,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":9,"column":11,"nodeType":"209","messageId":"210","endLine":9,"endColumn":29},{"ruleId":"207","severity":1,"message":"208","line":9,"column":55,"nodeType":"209","messageId":"210","endLine":9,"endColumn":73},{"ruleId":"211","severity":1,"message":"212","line":20,"column":1,"nodeType":"213","endLine":38,"endColumn":3},{"ruleId":"187","severity":1,"message":"214","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":14},{"ruleId":"187","severity":1,"message":"215","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":13},{"ruleId":"187","severity":1,"message":"216","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":21},{"ruleId":"187","severity":1,"message":"217","line":27,"column":11,"nodeType":"189","messageId":"190","endLine":27,"endColumn":27},{"ruleId":"187","severity":1,"message":"218","line":28,"column":11,"nodeType":"189","messageId":"190","endLine":28,"endColumn":24},{"ruleId":"187","severity":1,"message":"219","line":29,"column":11,"nodeType":"189","messageId":"190","endLine":29,"endColumn":33},{"ruleId":"191","severity":1,"message":"192","line":35,"column":6,"nodeType":"193","endLine":35,"endColumn":8,"suggestions":"220"},{"ruleId":"187","severity":1,"message":"221","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":14},{"ruleId":"187","severity":1,"message":"222","line":10,"column":7,"nodeType":"189","messageId":"190","endLine":10,"endColumn":10},{"ruleId":"187","severity":1,"message":"223","line":32,"column":17,"nodeType":"189","messageId":"190","endLine":32,"endColumn":26},{"ruleId":"224","severity":1,"message":"225","line":48,"column":75,"nodeType":"226","messageId":"227","endLine":48,"endColumn":76,"suggestions":"228"},{"ruleId":"224","severity":1,"message":"225","line":48,"column":105,"nodeType":"226","messageId":"227","endLine":48,"endColumn":106,"suggestions":"229"},{"ruleId":"224","severity":1,"message":"225","line":48,"column":138,"nodeType":"226","messageId":"227","endLine":48,"endColumn":139,"suggestions":"230"},{"ruleId":"224","severity":1,"message":"225","line":48,"column":167,"nodeType":"226","messageId":"227","endLine":48,"endColumn":168,"suggestions":"231"},{"ruleId":"187","severity":1,"message":"215","line":1,"column":8,"nodeType":"189","messageId":"190","endLine":1,"endColumn":13},{"ruleId":"183","replacedBy":"232"},{"ruleId":"185","replacedBy":"233"},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"@typescript-eslint/no-unused-vars","'gitHubJobService' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchJobs'. Either include it or remove the dependency array.","ArrayExpression",["236"],"no-unused-vars","'css' is defined but never used.","'colors' is defined but never used.","@typescript-eslint/no-redeclare","'Button' is already defined.","redeclared","'JobType' is defined but never used.","'getJobsTypes' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'JobsActionTypes' is defined but never used.","'Action' is defined but never used.","@typescript-eslint/consistent-type-assertions","Use 'as FieldInfo' instead of '<FieldInfo>'.","TSTypeAssertion","as","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Jobs' is defined but never used.","'React' is defined but never used.","'useDispatch' is defined but never used.","'savedDescription' is assigned a value but never used.","'savedLocation' is assigned a value but never used.","'savedFullTime' is assigned a value but never used.",["237"],"'type' is defined but never used.","'job' is assigned a value but never used.","'isLoading' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["238","239"],["240","241"],["242","243"],["244","245"],["234"],["235"],"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"246","fix":"248"},{"messageId":"249","fix":"250","desc":"251"},{"messageId":"252","fix":"253","desc":"254"},{"messageId":"249","fix":"255","desc":"251"},{"messageId":"252","fix":"256","desc":"254"},{"messageId":"249","fix":"257","desc":"251"},{"messageId":"252","fix":"258","desc":"254"},{"messageId":"249","fix":"259","desc":"251"},{"messageId":"252","fix":"260","desc":"254"},"Update the dependencies array to be: [searchJobs]",{"range":"261","text":"262"},{"range":"263","text":"262"},"removeEscape",{"range":"264","text":"265"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"266","text":"267"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"268","text":"265"},{"range":"269","text":"267"},{"range":"270","text":"265"},{"range":"271","text":"267"},{"range":"272","text":"265"},{"range":"273","text":"267"},[498,500],"[searchJobs]",[1138,1140],[6201,6202],"",[6201,6201],"\\",[6231,6232],[6231,6231],[6264,6265],[6264,6264],[6293,6294],[6293,6293]]