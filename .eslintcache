[{"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\index.tsx":"1","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\App.tsx":"2","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\colors.js":"3","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\Icons\\Arrow.js":"4","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\Header.tsx":"5","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\SearchBar.tsx":"6","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\styled.ts":"7","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\styled.ts":"8","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\styled.ts":"9","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Button.tsx":"10","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Spinner.tsx":"11","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\services\\gitHubJobService.ts":"12","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\constants.js":"13","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\JobItem.tsx":"14","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\styled.ts":"15","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\JobsContainer.tsx":"16","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\styled.ts":"17","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\Home.tsx":"18","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\styled.ts":"19","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\store.ts":"20","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useGitHubJobService.ts":"21","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useActions.ts":"22","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\types.ts":"23","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\helpers\\timeDiffererence.ts":"24","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\Checkbox.tsx":"25","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\BackToTopButton.tsx":"26","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\styled.ts":"27","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useWindowHeight&Scroll.ts":"28","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\styled.ts":"29","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\JobDetails\\JobDetails.tsx":"30","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\JobDetails\\styled.ts":"31","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\NotFound\\NotFound.tsx":"32","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\NotFound\\styled.ts":"33","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\reducers\\index.ts":"34","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\reducers\\jobs.ts":"35","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\reducers\\app.ts":"36"},{"size":335,"mtime":1610216410450,"results":"37","hashOfConfig":"38"},{"size":947,"mtime":1612201953207,"results":"39","hashOfConfig":"38"},{"size":1553,"mtime":1611165420679,"results":"40","hashOfConfig":"38"},{"size":1244,"mtime":1611661104279,"results":"41","hashOfConfig":"38"},{"size":1398,"mtime":1611601070638,"results":"42","hashOfConfig":"38"},{"size":2969,"mtime":1612204111642,"results":"43","hashOfConfig":"38"},{"size":4752,"mtime":1612204194507,"results":"44","hashOfConfig":"38"},{"size":1698,"mtime":1611661104279,"results":"45","hashOfConfig":"38"},{"size":3400,"mtime":1611088940542,"results":"46","hashOfConfig":"38"},{"size":471,"mtime":1611660882427,"results":"47","hashOfConfig":"38"},{"size":970,"mtime":1611087073951,"results":"48","hashOfConfig":"38"},{"size":1382,"mtime":1611661261945,"results":"49","hashOfConfig":"38"},{"size":187,"mtime":1615391827419,"results":"50","hashOfConfig":"38"},{"size":1535,"mtime":1611661104279,"results":"51","hashOfConfig":"38"},{"size":2393,"mtime":1611661104279,"results":"52","hashOfConfig":"38"},{"size":292,"mtime":1611089037913,"results":"53","hashOfConfig":"38"},{"size":570,"mtime":1611661104279,"results":"54","hashOfConfig":"38"},{"size":1702,"mtime":1611661104279,"results":"55","hashOfConfig":"38"},{"size":361,"mtime":1611661104279,"results":"56","hashOfConfig":"38"},{"size":358,"mtime":1612089940158,"results":"57","hashOfConfig":"38"},{"size":1493,"mtime":1612202660805,"results":"58","hashOfConfig":"38"},{"size":1966,"mtime":1611665489212,"results":"59","hashOfConfig":"38"},{"size":1727,"mtime":1611665356660,"results":"60","hashOfConfig":"38"},{"size":1445,"mtime":1610385783343,"results":"61","hashOfConfig":"38"},{"size":823,"mtime":1612204111641,"results":"62","hashOfConfig":"38"},{"size":1673,"mtime":1611655399710,"results":"63","hashOfConfig":"38"},{"size":765,"mtime":1611172370513,"results":"64","hashOfConfig":"38"},{"size":1089,"mtime":1610570853634,"results":"65","hashOfConfig":"38"},{"size":391,"mtime":1611166255586,"results":"66","hashOfConfig":"38"},{"size":4623,"mtime":1615390544095,"results":"67","hashOfConfig":"38"},{"size":5599,"mtime":1611171995202,"results":"68","hashOfConfig":"38"},{"size":412,"mtime":1611601070637,"results":"69","hashOfConfig":"38"},{"size":375,"mtime":1611589459553,"results":"70","hashOfConfig":"38"},{"size":161,"mtime":1612089940158,"results":"71","hashOfConfig":"38"},{"size":1584,"mtime":1612089940158,"results":"72","hashOfConfig":"38"},{"size":447,"mtime":1612089940158,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1u6ci0c",{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\index.tsx",[],["162","163"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\App.tsx",["164"],"import React, { useEffect } from 'react';\nimport Header from './components/Header/Header';\nimport Home from './pages/Home/Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport JobDetails from './pages/JobDetails/JobDetails';\nimport { useGitHubJobService } from './hooks/useGitHubJobService';\nimport { useSelector } from 'react-redux';\nimport StyledApp from './styled';\nimport { RootState } from './reducers/types';\n\nfunction App() {\n  const isThemeDark: boolean = useSelector(({ app }: RootState) => app.isThemeDark);\n  const { searchJobs } = useGitHubJobService();\n\n  useEffect(() => {\n    searchJobs();\n  }, []);\n  return (\n    <StyledApp isThemeDark={isThemeDark}>\n      <Header />\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/:jobID' component={JobDetails} />\n        </Switch>\n      </Router>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\colors.js",[],["165","166"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\Icons\\Arrow.js",["167","168"],"import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport colors from \"../constants/colors\";\r\n\r\nexport const SArrow = styled.div`\r\n    display: flex;            \r\n    height: 75%;\r\n  svg {      \r\n    height: 100%; \r\n    margin-left: 10px;\r\n  }  \r\n  \r\n`;\r\n\r\nexport default function Arrow(props) {\r\n\r\n  return (\r\n    <SArrow {...props} >\r\n      <svg viewBox=\"0 0 12 12\" className=\"icon\">\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M11.5303 5.46967C11.8232 5.76256 11.8232 6.23744 11.5303 6.53033L6.53033 11.5303C6.23744 11.8232 5.76256 11.8232 5.46967 11.5303C5.17678 11.2374 5.17678 10.7626 5.46967 10.4697L9.18934 6.75H1C0.585787 6.75 0.25 6.41421 0.25 6C0.25 5.58579 0.585787 5.25 1 5.25H9.18934L5.46967 1.53033C5.17678 1.23744 5.17678 0.762563 5.46967 0.46967C5.76256 0.176777 6.23744 0.176777 6.53033 0.46967L11.5303 5.46967Z\"\r\n        />\r\n      </svg>\r\n    </SArrow>\r\n  );\r\n}\r\n\r\n// ${props =>\r\n//   !props.isLoading &&\r\n//   css`\r\n//   & .icon {\r\n//     fill: transparent;\r\n//   }\r\n//   `}\r\n// ${props =>\r\n//   props.size === \"s\" &&\r\n//   css`\r\n//     height: 11px;\r\n//   `}\r\n\r\n//   ${props =>\r\n//     props.variant === \"ghost\" &&\r\n//     css`\r\n//       svg {\r\n//         fill: ${colors.black30};\r\n//       }\r\n//     `}","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\Header.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\SearchBar.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Header\\styled.ts",["169"],"import styled, { css } from 'styled-components';\r\nimport colors from '../../constants/colors'\r\n\r\n\r\n\r\nconst StyledHeader = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  align-items: center;\r\n  min-height: 140px;\r\n\r\n  & .header__backgrounds {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 140px;\r\n    & img {\r\n      max-width: 100%;\r\n      width: 100%;\r\n      border-bottom-left-radius: 80px;\r\n    }\r\n  }\r\n  & .header__logo {\r\n    color: ${colors.white};\r\n    font-size: 30px;\r\n  }\r\n  & .header__inner {\r\n    display: flex;\r\n    position: absolute;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    padding: 0 9vw;\r\n    & .header__toggle {\r\n      display: flex;\r\n      align-items: center;\r\n      & button {\r\n        position: relative;\r\n        margin: 0 15px;\r\n        height: 20px;\r\n        width: 40px;\r\n        border: 0;\r\n        border-radius: 10px;\r\n        cursor: pointer;\r\n        & .slider {\r\n          position: absolute;\r\n          height: 14px;\r\n          width: 14px;\r\n          top: 3px;\r\n          left: 4px;\r\n          border: 0;\r\n          border-radius: 50%;\r\n          background-color: ${colors.second};\r\n          transition: 0.2s;\r\n        }\r\n        & .active .slider {\r\n          transform: translateX(calc(100% + 4px));\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 600px) {\r\n    min-height: 200px;\r\n    & .header__backgrounds {\r\n      min-height: 200px;\r\n      overflow: hidden;\r\n      & img {\r\n        transform: translateX(-53px) scaleX(1.5);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledHeader;","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Button.tsx",["170"],"import React from 'react';\r\nimport Spinner from './Spinner';\r\nimport { StyledButton, StyledButtonProps } from './styled';\r\n\r\ninterface Button extends StyledButtonProps {\r\n  children: string; \r\n  onClick?: ()=>void \r\n}\r\n\r\nconst Button = ({ children, ...props }:Button) => {\r\n  return (\r\n    <StyledButton {...props}  >\r\n      <>\r\n        {children}\r\n        <Spinner {...props} />\r\n        {props.icon}\r\n      </>\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\Button\\Spinner.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\services\\gitHubJobService.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\constants\\constants.js",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\JobItem.tsx",["171"],"import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootState } from '../../reducers/types';\r\nimport StyledJobItem from './styled';\r\nimport { JobItemPropTypes } from './types';\r\n\r\n\r\nexport default function JobItem({ logo, date, lengthTerm, company, jobTitle, location, id }: JobItemPropTypes) {\r\n    const isThemeDark: boolean = useSelector(({ app }: RootState) => app.isThemeDark);\r\n  return (\r\n    <Link to={id}>\r\n      <StyledJobItem {...{ logo }} \r\n      isThemeDark={isThemeDark}\r\n      initial={{scale: 0}}\r\n      animate={{scale: 1}}\r\n      // initial={{translateX: Math.random()*1000-500}}\r\n      // animate={{translateX: 0}}\r\n      >\r\n        <div className='thumbnail__image__container'>\r\n          <div className='thumbnail__image__container_bg'></div>\r\n          <div className='thumbnail__image__container_box'>\r\n            {logo && <img src={logo} alt={`${company} company logo`} />}\r\n            {!logo && <div className='no-logo'>n / a</div>}\r\n          </div>\r\n        </div>\r\n        <p className='thumbnail__time-type'>\r\n          <span className='thumbnail__time'>{date}</span>\r\n          <span style={{ margin: '0 10px' }}>•</span>\r\n          <span className='thumbnail__type'>{lengthTerm}</span>\r\n        </p>\r\n        <h3 className='thumbnail__title'>{jobTitle}</h3>\r\n\r\n        <p className='thumbnail__company'>{company}</p>\r\n        <span className='thumbnail__location'>{location}</span>\r\n      </StyledJobItem>\r\n    </Link>\r\n  );\r\n}\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobItem\\styled.ts",["172"],"import styled, { css } from 'styled-components';\r\nimport colors from '../../constants/colors';\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport interface StyledJobItemProps {\r\n  logo: string;\r\n  isThemeDark: boolean;\r\n}\r\n\r\nconst StyledJobItem = styled(motion.div)<StyledJobItemProps>`\r\n  position: relative;\r\n  background-color: ${props => props.isThemeDark ? colors.blueDark : colors.white };\r\n  color: ${props => props.isThemeDark ? colors.gray : colors.grayDark };\r\n  border-radius: 5px;\r\n  padding: 0 20px 20px;\r\n  height: 225px;\r\n  box-shadow: 0px 0px 13px 0px ${colors.boxShadow};\r\n  & .thumbnail__title {\r\n    color: ${props => props.isThemeDark ? colors.white : colors.black };\r\n  }\r\n  & .thumbnail__image__container_bg {\r\n   \r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    background-color: ${props => props.isThemeDark ? colors.midnight : colors.white}\r\n  }\r\n  & .thumbnail__image__container_box {\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    height: 100%;\r\n    z-index: 2;\r\n  }\r\n  & .thumbnail__image__container {\r\n    display: flex;\r\n    position: relative;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    height: 70px;\r\n    width: 70px;\r\n    padding: 8px;\r\n    border-radius: 10px;\r\n    transform: translateY(-50%);\r\n    border: 1px solid ${props => props.isThemeDark ? colors.grayDark : colors.grayLight};\r\n    background-color: ${colors.white};\r\n    & img {\r\n      max-width: 100%;      \r\n      object-fit: contain;\r\n    };\r\n    & .no-logo {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      color: ${colors.grayDark};\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 12px;\r\n    };\r\n  }\r\n  & .thumbnail__time-type, .thumbnail__company {\r\n    font-size: 0.85em;\r\n  };\r\n  & .thumbnail__title {\r\n    margin: 15px 0;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n  };\r\n  & .thumbnail__location {\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 20px;\r\n    color: ${colors.main};\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 1;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n`;\r\n\r\nexport default StyledJobItem;\r\n\r\n\r\n//  background: ${({logo}) => logo ? `url(${logo})` : colors.grayLight};","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\JobsContainer.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\JobsContainer\\styled.ts",["173"],"import styled, { css } from 'styled-components';\r\n\r\nconst StyledJobsContainer = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 60px 15px;\r\n  margin: 70px auto 90px;\r\n  width: 100%;\r\n  & a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  @media (max-width: 950px) {    \r\n      grid-template-columns: repeat(2, 1fr);\r\n      grid-gap: 60px 10px;   \r\n  }\r\n  @media (max-width: 600px) {    \r\n      grid-template-columns: 1fr;\r\n      grid-gap: 70px 0;\r\n      margin: 60px auto 50px;\r\n   }\r\n`;\r\n\r\nexport default StyledJobsContainer;\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\Home.tsx",["174","175"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '../../components/Button/Button';\r\nimport JobItem from '../../components/JobItem/JobItem';\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\nimport { timeDifference } from '../../helpers/timeDiffererence';\r\nimport { JobType } from '../../types';\r\nimport JobsContainer from '../../components/JobsContainer/JobsContainer';\r\nimport StyledHome from './styled';\r\nimport { useGitHubJobService } from '../../hooks/useGitHubJobService';\r\nimport BackToTopButton from '../../components/BackToTopButton/BackToTopButton';\r\nimport Spinner from '../../components/Button/Spinner';\r\nimport NotFound from '../../components/NotFound/NotFound';\r\n\r\n\r\n\r\nexport default function Home() {  \r\n  const { jobs, searchMoreJobs, isLoading } = useGitHubJobService(); \r\n  const isFullPage = jobs.length > 0 && jobs.length % 50 === 0;\r\n  \r\n  \r\n  return (\r\n    <StyledHome>\r\n      <SearchBar />\r\n      {jobs.length > 0  && <JobsContainer>\r\n        \r\n        {jobs?.map((job: JobType) => (\r\n          <JobItem\r\n            key={job.id}\r\n            id={job.id}\r\n            logo={job.company_logo}\r\n            date={timeDifference(Date.now(), Date.parse(job.created_at))}\r\n            lengthTerm={job.type}\r\n            company={job.company}\r\n            jobTitle={job.title}\r\n            location={job.location}\r\n          />\r\n        ))}\r\n      </JobsContainer>}\r\n      {jobs.length < 1 && !isLoading && <NotFound />}\r\n         {isLoading && !jobs.length && <Spinner isLoading={isLoading} size='l' variant='ghost'/>}\r\n      {isFullPage && <Button isLoading={isLoading} onClick={searchMoreJobs} >Load More</Button>}\r\n      <BackToTopButton />\r\n    </StyledHome>\r\n  );\r\n}\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\Home\\styled.ts",["176","177"],"import styled, { css } from 'styled-components';\r\nimport colors from '../../constants/colors';\r\n\r\nconst StyledHome = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1900px;\r\n  width: 100%;\r\n  flex-grow: 1;\r\n  padding: 0 9vw 5vh;\r\n  margin: 0 auto;\r\n  @media (max-width: 600px) {\r\n    padding: 0 3vw 5vh;\r\n  }\r\n  `;\r\n\r\nexport default StyledHome;\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\store.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useGitHubJobService.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useActions.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\types.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\helpers\\timeDiffererence.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\SearchBar\\Checkbox.tsx",["178","179"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useActions } from '../../hooks/useActions';\r\nimport check from '../../images/desktop/icon-check.svg';\r\nimport { RootState } from '../../reducers/types';\r\nimport { StyledCheckbox, StyledCheckboxProps } from './styled';\r\n\r\ninterface CheckboxProps extends StyledCheckboxProps {\r\n  children?: string;\r\n}\r\n\r\nexport default function Checkbox({ checked, children }: CheckboxProps) {\r\n  const { toggleFulltime } = useActions();\r\n\r\n  useEffect(() => {\r\n    checked ? localStorage.setItem('fullTime', 'true') : localStorage.removeItem('fullTime');\r\n  }, [checked])\r\n\r\n  return (\r\n    <StyledCheckbox {...{ checked }}>\r\n      <span onClick={toggleFulltime}>\r\n        <img src={check} alt='Checkmark' />\r\n      </span>\r\n      <small onClick={toggleFulltime}>{children}</small>\r\n    </StyledCheckbox>\r\n  );\r\n}\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\BackToTopButton.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\BackToTopButton\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\hooks\\useWindowHeight&Scroll.ts",["180"],"import React, { useEffect, useState } from 'react';\r\n\r\nexport default function useWindowHeightScroll() {\r\n  // const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n  // const [scroll, setScroll] = useState(window.pageYOffset);\r\n  const [isBackToTopButtonVisible, setIsBackToTopButtonVisible] = useState(false)\r\n  useEffect(() => {\r\n    function updateScrollHeight() {\r\n      // setWindowHeight(window.innerHeight);\r\n      // setScroll(window.pageYOffset);      \r\n      const scrollHeight = Math.max(\r\n        document.body.scrollHeight, document.documentElement.scrollHeight,\r\n        document.body.offsetHeight, document.documentElement.offsetHeight,\r\n        document.body.clientHeight, document.documentElement.clientHeight\r\n      );\r\n      setIsBackToTopButtonVisible(window.pageYOffset >= scrollHeight / 5)\r\n    }\r\n    window.addEventListener('scroll', updateScrollHeight);\r\n    updateScrollHeight();\r\n    return () => window.removeEventListener('scroll', updateScrollHeight);\r\n  }, []);\r\n  \r\n  return {\r\n    isBackToTopButtonVisible\r\n  }\r\n}\r\n",["181","182"],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\JobDetails\\JobDetails.tsx",["183","184","185","186","187"],"import React from 'react';\r\nimport { timeDifference } from '../../helpers/timeDiffererence';\r\nimport { useGitHubJobService } from '../../hooks/useGitHubJobService';\r\nimport { JobType } from '../../types';\r\nimport BackToTopButton from '../../components/BackToTopButton/BackToTopButton';\r\nimport Button from '../../components/Button/Button';\r\nimport { StyledJobDetails } from './styled';\r\nimport { Props } from './types';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../reducers/types';\r\n\r\n// const isJobType = (job: JobType | undefined): job is JobType => {\r\n//   return (job as JobType).company_url !== void 0\r\n// }\r\n\r\nexport default function JobDetails({ match }: Props) {\r\n  const { jobs, isLoading } = useGitHubJobService();\r\n  const isThemeDark: boolean = useSelector(({ app }: RootState) => app.isThemeDark);\r\n  const jobID: string = match.params.jobID;\r\n  const job: JobType | undefined = jobs.find(({ id }) => id === jobID);\r\n\r\n  const cleanURL = (url: string): string => {\r\n    return (url = url && url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/')[0]);\r\n  };\r\n\r\n  const validCompanySite = (url: string): boolean => {\r\n    let valid = new RegExp(\r\n      /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi\r\n    );\r\n    return valid.test(url);\r\n  };\r\n\r\n  const applyNowLink = (link: string): string | undefined => {\r\n    let valid = /(?:(?:https?|ftp|file):\\/\\/|www\\.|ftp\\.)(?:\\([-A-Z0-9+&@#\\/%=~_|$?!:,.]*\\)|[-A-Z0-9+&@#\\/%=~_|$?!:,.])*(?:\\([-A-Z0-9+&@#\\/%=~_|$?!:,.]*\\)|[A-Z0-9+&@#\\/%=~_|$])/gim;\r\n    return link.match(valid) ? link.match(valid)![0] : undefined;\r\n  };\r\n\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: 'smooth',\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {job && (\r\n        <StyledJobDetails isThemeDark={isThemeDark}>\r\n          <div className='job__listing__header'>\r\n            <div className='header__image__container'>\r\n              {job.company_logo && <img src={`${job.company_logo}`} alt={`company logo`} />}\r\n              {!job.company_logo && <div className='no-logo'>n / a</div>}\r\n            </div>\r\n            <div className='header__textbox'>\r\n              <div className='textbox__inner'>\r\n                <h1 className='header__textbox__heading'>{job.company}</h1>\r\n                <p className='header__textbox__site'>{cleanURL(job.company_url)}</p>\r\n              </div>\r\n              <div className={`header__textbox__company-redirect`}>\r\n                {validCompanySite(job.company_url) && (\r\n                  <Button onClick={() => window.open(job.company_url)}>Company site</Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='job__listing__body'>\r\n            <div className='body__heading'>\r\n              <div className='body__heading__inner'>\r\n                <p className='body__heading__time-type'>\r\n                  <span className='body__heading__time'>\r\n                    {timeDifference(Date.now(), Date.parse(job.created_at))}\r\n                  </span>\r\n                  <span style={{ margin: '0 10px' }}>•</span>\r\n                  <span className='body__heading__type'>{job.type}</span>\r\n                </p>\r\n                <h2 className='body__heading__title'>{job.title}</h2>\r\n                <p className='body__heading__location'>{job.location}</p>\r\n              </div>\r\n              {applyNowLink(job.how_to_apply) && (\r\n                <Button onClick={() => window.open(applyNowLink(job.how_to_apply))}>Apply&nbsp;Now</Button>\r\n              )}\r\n            </div>\r\n            <div className='body__main' dangerouslySetInnerHTML={{ __html: job.description }} />\r\n          </div>\r\n          <div className='job__listing__cta'>\r\n            <h3 className='cta__heading'>How to Apply</h3>\r\n            <br />\r\n            <p className='cta__body' dangerouslySetInnerHTML={{ __html: job.how_to_apply }} />\r\n          </div>\r\n          <footer className='job__listing__footer'>\r\n            <div className='footer__textbox'>\r\n              <h4 className='footer__textbox__position'>{job.title}</h4>\r\n              <small className='footer__textbox__company'>{job.company}</small>\r\n            </div>\r\n            {applyNowLink(job.how_to_apply) && (\r\n              <Button onClick={() => window.open(applyNowLink(job.how_to_apply))}>Apply Now</Button>\r\n            )}\r\n          </footer>\r\n          <BackToTopButton />\r\n        </StyledJobDetails>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\pages\\JobDetails\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\NotFound\\NotFound.tsx",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\components\\NotFound\\styled.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\reducers\\index.ts",[],"D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\reducers\\jobs.ts",["188","189","190"],"import { FieldInfo, FULLTIME_SWITCH, INREASE_PAGE, Jobs, JobsActionTypes, JOBS_FILL, JOBS_FILL_MORE, JOBS_START_FETCHING, JOBS_STOP_FETCHING, RESET_PAGE, UPDATE_SEARCH_VALUE } from \"../types\";\r\nimport { JobsState } from \"./types\";\r\n\r\n\r\n// const isFieldInfo = (payload: any): payload is FieldInfo => {\r\n//   return (<FieldInfo>payload).field !== undefined && (<FieldInfo>payload).value !== undefined;\r\n// };\r\n\r\nconst initialState: JobsState = { \r\n  description: localStorage.getItem('description') || '',\r\n  location: localStorage.getItem('location') || '',\r\n  fullTime: !!localStorage.getItem('fullTime') || false,\r\n  page: 1,\r\n  jobs: [],\r\n  isLoading: false,\r\n};\r\n\r\nconst jobs = (state = initialState, action: JobsActionTypes): JobsState => {  \r\n  switch (action.type) {    \r\n    case JOBS_START_FETCHING:\r\n      return { ...state, isLoading: true };\r\n    case JOBS_STOP_FETCHING:\r\n      return { ...state, isLoading: false };\r\n    case JOBS_FILL:\r\n      return { ...state, jobs: action.payload };\r\n    case JOBS_FILL_MORE:\r\n      return { ...state, jobs: [...state.jobs, ...action.payload] };\r\n    case FULLTIME_SWITCH:      \r\n      return { ...state, fullTime: !state.fullTime };\r\n    case INREASE_PAGE:      \r\n      return { ...state, page: ++state.page };\r\n    case RESET_PAGE:          \r\n      return { ...state, page: 1 };\r\n    case UPDATE_SEARCH_VALUE: \r\n      const field: string = action.payload.field;      \r\n      return { ...state, [field]: action.payload.value };\r\n\r\n    default:\r\n      const x: never = action;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default jobs;\r\n\r\n","D:\\PRAKTIKUM\\Git-Hub-Jobs\\src\\reducers\\app.ts",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":17,"column":6,"nodeType":"197","endLine":17,"endColumn":8,"suggestions":"198"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"199","severity":1,"message":"200","line":2,"column":18,"nodeType":"201","messageId":"202","endLine":2,"endColumn":21},{"ruleId":"199","severity":1,"message":"203","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":14},{"ruleId":"204","severity":1,"message":"200","line":1,"column":18,"nodeType":"201","messageId":"202","endLine":1,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":10,"column":7,"nodeType":"201","messageId":"207","endLine":10,"endColumn":13},{"ruleId":"204","severity":1,"message":"208","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"200","line":1,"column":18,"nodeType":"201","messageId":"202","endLine":1,"endColumn":21},{"ruleId":"204","severity":1,"message":"200","line":1,"column":18,"nodeType":"201","messageId":"202","endLine":1,"endColumn":21},{"ruleId":"204","severity":1,"message":"209","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"208","line":1,"column":28,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"200","line":1,"column":18,"nodeType":"201","messageId":"202","endLine":1,"endColumn":21},{"ruleId":"204","severity":1,"message":"203","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":14},{"ruleId":"204","severity":1,"message":"210","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":21},{"ruleId":"204","severity":1,"message":"211","line":5,"column":10,"nodeType":"201","messageId":"202","endLine":5,"endColumn":19},{"ruleId":"204","severity":1,"message":"212","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":13},{"ruleId":"191","replacedBy":"213"},{"ruleId":"193","replacedBy":"214"},{"ruleId":"204","severity":1,"message":"215","line":17,"column":17,"nodeType":"201","messageId":"202","endLine":17,"endColumn":26},{"ruleId":"216","severity":1,"message":"217","line":34,"column":75,"nodeType":"218","messageId":"219","endLine":34,"endColumn":76,"suggestions":"220"},{"ruleId":"216","severity":1,"message":"217","line":34,"column":105,"nodeType":"218","messageId":"219","endLine":34,"endColumn":106,"suggestions":"221"},{"ruleId":"216","severity":1,"message":"217","line":34,"column":138,"nodeType":"218","messageId":"219","endLine":34,"endColumn":139,"suggestions":"222"},{"ruleId":"216","severity":1,"message":"217","line":34,"column":167,"nodeType":"218","messageId":"219","endLine":34,"endColumn":168,"suggestions":"223"},{"ruleId":"204","severity":1,"message":"224","line":1,"column":10,"nodeType":"201","messageId":"202","endLine":1,"endColumn":19},{"ruleId":"204","severity":1,"message":"225","line":1,"column":52,"nodeType":"201","messageId":"202","endLine":1,"endColumn":56},{"ruleId":"204","severity":1,"message":"226","line":39,"column":13,"nodeType":"201","messageId":"202","endLine":39,"endColumn":21},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchJobs'. Either include it or remove the dependency array.","ArrayExpression",["229"],"no-unused-vars","'css' is defined but never used.","Identifier","unusedVar","'colors' is defined but never used.","@typescript-eslint/no-unused-vars","@typescript-eslint/no-redeclare","'Button' is already defined.","redeclared","'useState' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'React' is defined but never used.",["227"],["228"],"'isLoading' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["230","231"],["232","233"],["234","235"],["236","237"],"'FieldInfo' is defined but never used.","'Jobs' is defined but never used.","'x' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"messageId":"240","fix":"241","desc":"242"},{"messageId":"243","fix":"244","desc":"245"},{"messageId":"240","fix":"246","desc":"242"},{"messageId":"243","fix":"247","desc":"245"},{"messageId":"240","fix":"248","desc":"242"},{"messageId":"243","fix":"249","desc":"245"},{"messageId":"240","fix":"250","desc":"242"},{"messageId":"243","fix":"251","desc":"245"},"Update the dependencies array to be: [searchJobs]",{"range":"252","text":"253"},"removeEscape",{"range":"254","text":"255"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"256","text":"257"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"258","text":"255"},{"range":"259","text":"257"},{"range":"260","text":"255"},{"range":"261","text":"257"},{"range":"262","text":"255"},{"range":"263","text":"257"},[645,647],"[searchJobs]",[1599,1600],"",[1599,1599],"\\",[1629,1630],[1629,1629],[1662,1663],[1662,1662],[1691,1692],[1691,1691]]